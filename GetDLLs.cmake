function(get_dlls destination target)
    if(NOT TARGET get-dlls)
        add_custom_target(get-dlls ALL)
    endif()

    get_target_property(libraries ${target} LINK_LIBRARIES)
    get_target_property(libraries2 ${target} INTERFACE_LINK_LIBRARIES)
    foreach(lib IN LISTS libraries libraries2)
        if(WIN32 AND TARGET ${lib})
            get_target_property(type "${lib}" TYPE)
            get_target_property(dests "${lib}" COPY_DESTINATIONS)
            get_target_property(configs "${lib}" IMPORTED_CONFIGURATIONS)
            if(type STREQUAL SHARED_LIBRARY AND NOT destination IN_LIST dests)
                set(files)
                foreach(config IN LISTS configs)
                    string(TOUPPER "${config}" config)
                    get_target_property(file "${lib}" IMPORTED_LOCATION_${config})
                    get_filename_component(fname "${file}" NAME)
                    set(output "${destination}/${fname}")
                    add_custom_command(
                        OUTPUT "${destination}/${fname}"
                        DEPENDS ${file}
                        COMMAND "${CMAKE_COMMAND}" -E copy ${file} ${output}
                        )
                    list(APPEND files "${output}")
                endforeach()
                string(MAKE_C_IDENTIFIER "${lib}" ident)
                set_property(TARGET ${lib} APPEND PROPERTY COPY_DESTINATIONS "${destination}")
                add_custom_target("${ident}-copy" DEPENDS "${destination}/$<TARGET_FILE_NAME:${lib}>")
                add_dependencies(get-dlls "${ident}-copy")
                get_dlls("${destination}" "${lib}")
            endif()
        endif()
    endforeach()
endfunction()